version: "3.9"

services:
  # ───────────────── Docker‑in‑Docker (même container dind) ────────────────
  docker:
    image: docker:dind
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: /certs
    ports:
      - "2376:2376"
    volumes:
      - docker_certs:/certs/client

  # ───────────────── Jenkins ───────────────────────────────────────────────
  jenkins:
    build: .
    depends_on:
      - docker
      - sonarqube
    environment:
      # Docker‑in‑Docker
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: "1"

      # Accès à votre cluster Minikube
      KUBECONFIG: /home/jenkins/.kube/config
      # Adresse de SonarQube (à utiliser dans vos pipelines)
      SONAR_HOST_URL: http://sonarqube:9000
    ports:
      - "8090:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - docker_certs:/certs/client:ro
      - ./scripts:/scripts
      # Monte la config Minikube du poste hôte
      - ${HOME}/.kube:/home/jenkins/.kube:ro
      - ${HOME}/.minikube:/home/jenkins/.minikube:ro

  # ───────────────── Base PostgreSQL pour SonarQube ────────────────────────
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # ───────────────── SonarQube ─────────────────────────────────────────────
  sonarqube:
    image: sonarqube:lts
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    # Java 17 déjà inclus dans l’image officielle :contentReference[oaicite:1]{index=1}

volumes:
  docker_certs:
  jenkins_home:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
